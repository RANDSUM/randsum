---
import { getCollection } from 'astro:content';
import DocumentationLayout from '../../layouts/DocumentationLayout.astro';

export async function getStaticPaths() {
  const examples = await getCollection('examples');
  return examples.map((example) => ({
    params: { slug: example.slug },
    props: { example },
  }));
}

const { example } = Astro.props;
const { Content } = await example.render();

// Get related examples
const allExamples = await getCollection('examples');
const relatedExamples = allExamples
  .filter(ex => ex.slug !== example.slug && ex.data.package === example.data.package)
  .slice(0, 3);
---

<DocumentationLayout 
  title={`${example.data.title} - RANDSUM Examples`}
  description={example.data.description}
>
  <!-- Example Header -->
  <div class="mb-8">
    <div class="flex items-center gap-2 text-sm text-gray-400 mb-2">
      <a href="/examples" class="hover:text-gray-300">Examples</a>
      <span>/</span>
      <span class="text-gray-300">{example.data.title}</span>
    </div>
    
    <h1 class="text-3xl font-bold text-white mb-4">{example.data.title}</h1>
    
    {example.data.description && (
      <p class="text-lg text-gray-300 mb-6">{example.data.description}</p>
    )}
    
    <div class="flex flex-wrap gap-2 mb-4">
      <span class={`badge ${
        example.data.difficulty === 'beginner' ? 'badge-primary' :
        example.data.difficulty === 'intermediate' ? 'badge-warning' :
        'badge-error'
      }`}>
        {example.data.difficulty}
      </span>
      <span class="badge badge-secondary">{example.data.package}</span>
      {example.data.category && (
        <span class="badge badge-secondary">{example.data.category}</span>
      )}
      {example.data.estimatedTime && (
        <span class="badge badge-secondary">{example.data.estimatedTime} min</span>
      )}
    </div>
    
    {example.data.tags && example.data.tags.length > 0 && (
      <div class="flex gap-1">
        {example.data.tags.map((tag) => (
          <span class="badge badge-secondary text-xs">{tag}</span>
        ))}
      </div>
    )}
  </div>

  <!-- Prerequisites -->
  {example.data.prerequisites && example.data.prerequisites.length > 0 && (
    <div class="mb-8 p-4 bg-blue-900 bg-opacity-30 border border-blue-800 rounded-lg">
      <h3 class="text-lg font-semibold text-blue-200 mb-2">Prerequisites</h3>
      <ul class="list-disc list-inside text-blue-100 space-y-1">
        {example.data.prerequisites.map((prereq) => (
          <li>{prereq}</li>
        ))}
      </ul>
    </div>
  )}

  <!-- Live Demo Link -->
  {example.data.hasLiveDemo && example.data.demoUrl && (
    <div class="mb-8 p-4 bg-green-900 bg-opacity-30 border border-green-800 rounded-lg">
      <div class="flex items-center justify-between">
        <div>
          <h3 class="text-lg font-semibold text-green-200 mb-1">Live Demo Available</h3>
          <p class="text-green-100 text-sm">Try this example in an interactive environment</p>
        </div>
        <a 
          href={example.data.demoUrl}
          class="btn btn-primary"
          target="_blank"
          rel="noopener noreferrer"
        >
          Open Demo
        </a>
      </div>
    </div>
  )}

  <!-- Example Content -->
  <div class="prose prose-invert max-w-none">
    <Content />
  </div>

  <!-- Code Repository Link -->
  {example.data.codeUrl && (
    <div class="mt-8 p-4 bg-gray-900 border border-gray-800 rounded-lg">
      <div class="flex items-center justify-between">
        <div>
          <h3 class="text-lg font-semibold text-white mb-1">Complete Code</h3>
          <p class="text-gray-300 text-sm">View the full source code for this example</p>
        </div>
        <a 
          href={example.data.codeUrl}
          class="btn btn-secondary"
          target="_blank"
          rel="noopener noreferrer"
        >
          View Code
        </a>
      </div>
    </div>
  )}

  <!-- Navigation -->
  <div class="mt-12 pt-8 border-t border-gray-800">
    <div class="flex flex-col sm:flex-row justify-between gap-4">
      {example.data.prevExample && (
        <a href={`/examples/${example.data.prevExample}`} class="card flex-1 hover:border-gray-700">
          <div class="text-sm text-gray-400 mb-1">← Previous Example</div>
          <div class="card-title text-base">Continue Learning</div>
        </a>
      )}
      
      {example.data.nextExample && (
        <a href={`/examples/${example.data.nextExample}`} class="card flex-1 hover:border-gray-700 text-right">
          <div class="text-sm text-gray-400 mb-1">Next Example →</div>
          <div class="card-title text-base">Continue Learning</div>
        </a>
      )}
    </div>
  </div>

  <!-- Related Examples -->
  {relatedExamples.length > 0 && (
    <div class="mt-8">
      <h3 class="text-xl font-semibold text-white mb-4">Related Examples</h3>
      <div class="grid sm:grid-cols-2 lg:grid-cols-3 gap-4">
        {relatedExamples.map((related) => (
          <a href={`/examples/${related.slug}`} class="card hover:border-gray-700">
            <div class="flex items-center gap-2 mb-2">
              <span class={`badge text-xs ${
                related.data.difficulty === 'beginner' ? 'badge-primary' :
                related.data.difficulty === 'intermediate' ? 'badge-warning' :
                'badge-error'
              }`}>
                {related.data.difficulty}
              </span>
            </div>
            <h4 class="card-title text-base">{related.data.title}</h4>
            <p class="card-description text-sm">{related.data.description}</p>
          </a>
        ))}
      </div>
    </div>
  )}

  <!-- Help Section -->
  <div class="mt-8 bg-gray-900 rounded-lg p-6 border border-gray-800">
    <h3 class="text-lg font-semibold text-white mb-3">Need Help?</h3>
    <p class="text-gray-300 mb-4">
      Having trouble with this example? Here are some resources:
    </p>
    <div class="flex flex-wrap gap-3">
      <a href="/docs/installation" class="btn btn-ghost">
        Installation Guide
      </a>
      <a href="/docs/api" class="btn btn-ghost">
        API Reference
      </a>
      <a 
        href="https://github.com/RANDSUM/randsum/issues"
        class="btn btn-secondary"
        target="_blank"
        rel="noopener noreferrer"
      >
        Report Issue
      </a>
    </div>
  </div>
</DocumentationLayout>
