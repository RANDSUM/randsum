$schema: 'https://moonrepo.dev/schemas/project.json'

id: site
language: 'typescript'
dependsOn:
  - 'roller'
  - 'blades'
  - 'daggerheart'
  - 'fifth'
  - 'root-rpg'
  - 'salvageunion'

tasks:
  # TypeScript type checking
  tsCheck:
    command: 'astro check'
    inputs:
      - 'src/**/*'
      - 'tsconfig.json'
      - 'astro.config.mjs'
    deps:
      - 'roller:build'
      - 'blades:build'
      - 'daggerheart:build'
      - 'fifth:build'
      - 'root-rpg:build'
      - 'salvageunion:build'
    options:
      cache: false
      runInCI: true
      mergeArgs: 'replace'
      mergeEnv: 'replace'

  # Development server
  dev:
    command: 'astro dev'
    deps:
      - 'roller:build'
      - 'blades:build'
      - 'daggerheart:build'
      - 'fifth:build'
      - 'root-rpg:build'
      - 'salvageunion:build'
    options:
      cache: false
      persistent: true
      runInCI: true
      mergeArgs: 'replace'
      mergeEnv: 'replace'

  # Build for production
  build:
    command: 'astro build'
    inputs:
      - 'src/**/*'
      - 'public/**/*'
      - 'astro.config.mjs'
      - 'tsconfig.json'
      - 'package.json'
    outputs:
      - 'dist/**/*'
    deps:
      - 'roller:build'
      - 'blades:build'
      - 'daggerheart:build'
      - 'fifth:build'
      - 'root-rpg:build'
      - 'salvageunion:build'
    options:
      cache: false
      runInCI: true
      mergeArgs: 'replace'
      mergeEnv: 'replace'

  # Preview built site
  preview:
    command: 'astro preview'
    deps:
      - 'build'
    options:
      cache: false
      persistent: true
      runInCI: true
      mergeArgs: 'replace'
      mergeEnv: 'replace'

  # Lint Astro and TypeScript files
  lint:
    command: 'eslint . -c ./eslint.config.js --ext .astro,.ts,.js'
    inputs:
      - 'src/**/*'
      - '**/*.astro'
      - '**/*.ts'
      - '**/*.js'
    deps:
      - 'roller:build'
      - 'blades:build'
      - 'daggerheart:build'
      - 'fifth:build'
      - 'root-rpg:build'
      - 'salvageunion:build'
    options:
      runInCI: true
      mergeArgs: 'replace'
      mergeEnv: 'replace'
      cache: false

  # Format code
  format:
    command: 'prettier --write . --ignore-path ../../.prettierignore --config ./.prettierrc'
    inputs:
      - 'src/**/*'
      - '**/*.astro'
      - '**/*.ts'
      - '**/*.js'
      - '**/*.json'
      - '**/*.md'
      - '.prettierrc'
    options:
      cache: false
      runInCI: true
      mergeArgs: 'replace'
      mergeEnv: 'replace'

  # Check formatting
  formatCheck:
    command: 'prettier --check . --ignore-path ../../.prettierignore --config ./.prettierrc'
    inputs:
      - 'src/**/*'
      - '**/*.astro'
      - '**/*.ts'
      - '**/*.js'
      - '**/*.json'
      - '**/*.md'
      - '.prettierrc'
    options:
      cache: false
      mergeArgs: 'replace'
      mergeEnv: 'replace'

  test:
    command: 'echo "No tests configured yet for site"'
    options:
      cache: false
      runInCI: true
      mergeArgs: 'replace'
      mergeEnv: 'replace'

  ci:
    deps:
      - 'tsCheck'
      - 'test'
      - 'lint'
      - 'formatCheck'
      - 'build'

  deploy:
    command: 'echo "Deploy will be handled by GitHub Actions"'
    deps:
      - 'build'
    options:
      runInCI: false
      cache: false
