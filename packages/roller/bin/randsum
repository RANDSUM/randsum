#!/usr/bin/env node

import { roll, validateNotation } from '@randsum/roller'

const args = process.argv.slice(2)

if (args.includes('--help') || args.includes('-h')) {
  await showHelp()
  process.exit(0)
}

if (args.length === 0) {
  console.error('ERROR: Please provide dice notation')
  console.error('\nUsage: randsum <dice-notation>')
  console.error('Examples:')
  console.error('  randsum "2d6"        # Roll 2 six-sided dice')
  console.error('  randsum "4d6L"       # Roll 4d6, drop lowest')
  console.error('  randsum "1d20+5"     # Roll 1d20, add 5')
  console.error('\nFor more help: randsum --help')
  process.exit(1)
}

try {
  const notation = args[0] ?? ''
  const validated = validateNotation(notation)

  if (!validated.valid) {
    console.error(`ERROR: Invalid dice notation: "${notation}"`)
    console.error('\nValid formats include:')
    console.error('  - Basic: 2d6, 1d20, 3d8')
    console.error('  - With modifiers: 4d6L, 2d20H, 3d6!')
    console.error('  - With arithmetic: 1d20+5, 2d6-1')
    console.error('  - Complex: 4d6LR{1}+3')
    console.error('\nFor detailed help: randsum --help')
    process.exit(1)
  }

  const result = roll(validated.notation)
  const message = formatMessage(result, validated)
  console.log(message)
  process.exit(0)
} catch (error) {
  console.error(`ERROR: ${error instanceof Error ? error.message : error}`)
  console.error('\nIf this error persists, please check your dice notation format.')
  console.error('For help: randsum --help')
  process.exit(1)
}

function formatMessage(result, { description, options }) {
  const hasModifiers = options.modifiers !== undefined
  const rollResult = result.rolls.join(', ')
  const rawRolls = result.history.initialRolls.join(', ')

  if (hasModifiers) {
    return messageFrame(
      result.total,
      `Raw Rolls: [${rawRolls}]\nRolls: [${rollResult}]`,
      description.join(', ')
    )
  }

  return messageFrame(result.total, `Rolls: [${result.rolls.join(', ')}]`, description.join(', '))
}

function messageFrame(total, inner, description) {
  return `
RANDSUM Roll Result:
-------------------
Total: ${total}
${inner}
Description: ${description}
`
}

async function showHelp() {
  try {
    const fs = await import('fs')
    const path = await import('path')
    const { fileURLToPath } = await import('url')

    const scriptDir = path.dirname(fileURLToPath(import.meta.url))
    const helpPath = path.join(scriptDir, 'help.json')
    const helpData = JSON.parse(fs.readFileSync(helpPath, 'utf8'))

    let output = `\n${helpData.title}\n\nUSAGE:\n  ${helpData.usage}\n\n`

    for (const section of helpData.sections) {
      output += `${section.title}:\n`

      if (section.items) {
        for (const item of section.items) {
          output += `  ${item}\n`
        }
      }

      if (section.subsections) {
        for (const subsection of section.subsections) {
          output += `  ${subsection.title}:\n`
          for (const item of subsection.items) {
            output += `    ${item}\n`
          }
          output += '\n'
        }
      }

      output += '\n'
    }

    output += `${helpData.footer}\n`
    console.log(output)
  } catch (error) {
    console.log(`
RANDSUM Roller CLI

USAGE:
  randsum <dice-notation>

Examples:
  randsum "2d6"     # Roll 2 six-sided dice
  randsum "1d20+5"  # Roll 1d20, add 5
  randsum "4d6L"    # Roll 4d6, drop lowest

For detailed help, ensure help.json is available.
`)
  }
}
